name: Deploy and Analyze Go Web Application

on:
  push:
    branches:
      - master  # Trigger workflow on push to the master branch

jobs:
  build-deploy-analyze:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23.2

      # Step 3: Install gosec
      - name: Install gosec
        run: |
          curl -sSfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s -- -b $(go env GOPATH)/bin

      # Step 4: Run gosec for static analysis
      - name: Run gosec
        run: |
          gosec ./...
        continue-on-error: true

      # Step 5: Generate and upload the gosec report
      - name: Save gosec report
        run: |
          gosec -fmt=json -out=gosec-report.json ./...
        continue-on-error: true

      - name: Upload gosec report
        uses: actions/upload-artifact@v3
        with:
          name: gosec-report
          path: gosec-report.json
        continue-on-error: true

      # Step 6: Write .env file
      - name: Write .env file
        run: |
          echo "DBUSER=${{ secrets.DBUSER }}" >> .env
          echo "DBPASS=${{ secrets.DBPASS }}" >> .env
          echo "DBADDR=${{ secrets.DBADDR }}" >> .env
          echo "DBNAME=${{ secrets.DBNAME }}" >> .env
          echo "JWTSECRET=${{ secrets.JWTSECRET }}" >> .env

      # Step 7: Build the Go application
      - name: Build the application
        run: |
          go build -o sqli ./cmd

      # Step 8: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t natnaelcrypto/go-web-application:latest .

      # Step 9: Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker login -u natnaelcrypto -p ${{ secrets.DOCKER_ACCESS_TOKEN }}
          docker push natnaelcrypto/go-web-application:latest

      # Step 10: Run the application in a container
      - name: Run Go application in Docker
        run: |
          docker run -d --name go-app -p 5000:5000 natnaelcrypto/go-web-application:latest

      # Step 11: Perform OWASP ZAP dynamic analysis
      - name: Run OWASP ZAP Baseline Scan
        run: |
          docker run --rm -v $(pwd):/zap/wrk:rw -t owasp/zap2docker-stable zap-baseline.py -t http://localhost:5000 -r zap-report.html
        env:
          LANG: en_US.UTF-8
          LC_ALL: en_US.UTF-8
        continue-on-error: true

      # Step 12: Upload OWASP ZAP report
      - name: Upload OWASP ZAP report
        uses: actions/upload-artifact@v3
        with:
          name: zap-report
          path: zap-report.html

      # Step 13: Cleanup Docker containers
      - name: Cleanup
        run: |
          docker stop go-app
          docker rm go-app
